initSidebarItems({"mod":[["aggregate","Implementations of the ChunkAgg trait."],["apply","Implementations of the ChunkApply Trait."],["arithmetic","Implementations of arithmetic operations on ChunkedArray's."],["builder",""],["cast","Implementations of the ChunkCast Trait."],["chunkops",""],["comparison",""],["iterator",""],["ops","Traits for miscellaneous operations on ChunkedArray"],["set",""],["take","Traits to provide fast Random access to ChunkedArrays data. This prevents downcasting every iteration. IntoTakeRandom provides structs that implement the TakeRandom trait. There are several structs that implement the fastest path for random access."],["temporal","Traits and utilities for temporal data."],["unique",""],["upstream_traits","Implementations of upstream traits for ChunkedArray"]],"struct":[["ChunkedArray","ChunkedArrayEvery Series contains a `ChunkedArray<T>`. Unlike Series, ChunkedArray's are typed. This allows us to apply closures to the data and collect the results to a `ChunkedArray` of te same type `T`. Below we use an apply to use the cosine function to the values of a `ChunkedArray`."]],"trait":[["Downcast",""]]});